<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx" 
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.0.xsd">

  <bean id="localHostAddress" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
    <property name="staticMethod"><value>org.opennms.netmgt.daemon.DaemonUtils.getLocalHostAddress</value></property>
  </bean>
  
  <bean id="localHostName" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
    <property name="staticMethod"><value>org.opennms.netmgt.daemon.DaemonUtils.getLocalHostName</value></property>
  </bean>
  
  <!--  Instead of doing all of the work to create an EventIpcManagerDefaultImpl class
        here including all of its dependencies, we create a late-initializing proxy here
        and let eventd do the setup for the EventIpcManagerDefaultImpl and initialize
        the proxy with a pointer to the "real" eventIpcManager. -->
  <bean id="eventIpcManager" name="eventSubscriptionService, eventForwarder" class="org.opennms.netmgt.eventd.EventIpcManagerProxy" />

  <bean id="eventIpcManagerFactory-setInstance" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
    <property name="staticMethod"><value>org.opennms.netmgt.eventd.EventIpcManagerFactory.setIpcManager</value></property>
    <property name="arguments">
      <list>
        <ref bean="eventIpcManager"/>
      </list>
    </property>
  </bean>
</beans>
